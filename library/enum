enum

built-in module/data type

- iterable collection of constants
    - by default, constants are assigned to vals: 1, 2, ...
- creation via
    (1) class syntax
    (2) functional syntax
- useful in conjunction with pattern matching (like switch-case)

- SEE ALSO
    - /exercism/python/food-chain
    - /exercism/python/spiral-matrix

EXAMPLE
from enum import Enum
(1)
class Color(Enum):
    RED = (255, 0, 0)
    GREEN = (0, 255, 0)
    BLUE = (0, 0, 255)

colors = list(Color)
print(colors[0].value)          # (255, 0, 0)
for color in colors:
    print(color, color.value)   # Color.RED(255, 0, 0)
                                # Color.GREEN(0, 255, 0)
                                # Color.BLUE(0, 0, 255)
(2)
Direction = Enum('Direction', ['RIGHT', 'LEFT', 'UP', 'DOWN'])

direction = Direction(3)
match direction:
    case Direction.RIGHT:
        print(f"RIGHT: {direction.value}")
        print(direction.value)
    case Direction.LEFT:
        print(f"LEFT: {direction.value}")
    case Direction.UP:
        print(f"UP: {direction.value}") # UP: 3
    case Direction.DOWN:
        print(f"DOWN: {direction.value}")
