lambda

anonymous func

- (lambda args: statement)
    - have single statement which implicitly returns val
        - if more are needed, define separate func
    - may have multiple args separated by comma
    - may be assigned to var (1)
    - may be invoked directly (2)
    - may be passed to a func as arg (3)

- SEE ALSO
    - entry: list->funcs
    - /exercism/python/yacht
    - /exercism/python/list-ops

EXAMPLE
(1)
func = lambda x, y: x + y
print(func(1, 2))  # 3
(2)
for i in range(3):
    print((lambda x: x + 42)(i))  # 42 43 44
(3)
def filter(function, ls):
    res = []
    for elem in ls:
        if function(elem):
            res.append(elem)
    return res

res = filter(lambda x: x % 2 == 1, [1, 2, 3, 5])
print(res)  # [1, 3, 5]

