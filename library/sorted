sorted

built-in func

- sorted(iterable, key, reverse)
    - 1st arg: to be sorted
    - 2nd arg: mapping func (optional)
        - applied to each elem prior to comparison
    - 3rd arg: ascending, if False; otherwise, descending (optional)
    - returns new list in de-/ascending order

EXAMPLE
nums = [0, 3, -3, 6]
res = sorted(nums, reverse=True)
print(res)  # [6, 3, 0, -3]
print(res == sorted(nums, key=lambda x: -x))  # True

tuples = [('A', 15), ('B', 12), ('B', 10)]
res = sorted(tuples, key=lambda t: t[1])
print(res)  # [('B', 10), ('B', 12), ('A', 15)]

dict = {'1': [2, 3], '2': [1], '3': [1, 6]}
res = sorted(dict.items(), key=lambda item: item[1])
print(res)  # [('2', [1]), ('3', [1, 6]), ('1', [2, 3])]
