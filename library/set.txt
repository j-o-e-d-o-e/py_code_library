set

unique elements, set theory

- Contains only unique elements
- Stored in neither alphabetical nor numerical order
- Only immutable objects are allowed as elements, means: no lists[], but tupel()
- Frozensets are like sets, but additionally immutable, e.g. no add()-method usable
- set() takes mutable object (lists) and returns a set. Useful for getting rid of duplicates in lists. Similarly, frozenset()-function
- add() adds an element to set, if it isn't already included
- difference() returns a list containing the unique elements of two lists. Similar to operator "-"
- intersection() returns a list containing the common elements of two lists. Similar to "&"
- union() returns a set containing all unique elements of both sets
- discard("element") discards 'element' from set

EXAMPLES
{("punk", "rock"),"jazz", "jazz"}
#prompts only: {'jazz', ('punk', 'rock')}

tho ="might take some time".split()
pho = set(tho)
pho #prompts: {'some', 'might', 'time', 'take'}

set("abcd") | set ("cdef")
#prompts: {'a', 'e', 'f', 'd', 'c', 'b'}

set("dadaismus ist da")
#prompts: {'s', 'm', ' ', 't', 'u', 'a', 'd', 'i'}

alpha = {1,3}
beta = 1,2
alpha.difference(beta) #alternatively: alpha - set(beta)
#prompts: {3}