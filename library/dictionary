dictionary



- stores key-value-pairs
    - keys must be unique & immutable: int, float, string, tuple, bool
    - vals may be of any type
- no guaranteed order
(1) add: dict[key] = val
(2) retrieve
    - 'dict[key]' returns val for given key
    - 'dict.get(key, default)' returns val for given key if key is in dict, else default
(3) in-operator checks whether dict contains key/val
(4) remove: del(dict[key])
(5) iterables
    - 'dict.items()' returns list of key-val-pairs
    - 'dict.keys()' returns list of keys
    - 'dict.values()' returns list of vals

EXAMPLE
dict = {1: 'apple', 2: 'berry'}
(1)
dict[3] = "cherry"
(2)
# print(d[0])  # KeyError
print(dict.get(0, "apple"))  # apple
(3)
print(1 in dict)  # True
print("apple" in dict.values())  # True
(4)
del [dict[3]]
(5)
for item in dict.items():
    print(item, end=" ")  # (1, 'apple') (2, 'berry')

for key in dict:
    print(key, dict[key], end=" ")  # 1 apple 2 berry

for key in dict.keys():
    print(key, end=" ")  # 1 2

for val in dict.values():
    print(val, end=" ")  # apple berry

dict = {}
for word in "She loves you yeah yeah yeah".split():
    if word in dict:
        dict[word] += 1
    else:
        dict[word] = 1
print(dict)  # {'She': 1, 'loves': 1, 'you': 1, 'yeah': 3}
