range

built-in func

- indexed iterable
    - supports all common sequence operations (like list and tuple)  
- range(start, stop, step)
    - start: inclusive (optional)
        - defaults to zero
    - stop: exclusive (required)
    - step: in-/decrement (optional)
        - if not given, defaults to 1
    - returns sequence of nums
    - may be sliced
(1) 3 ways to reverse sequence
        - range()[::-1]
        - reversed(range())
        - swap start and stop and use decrement as step
(2) range(len(list)) allows to iterate over indices of an iterable
(3) "pythonic" way for "traditional" for-loop with counter

- SEE ALSO
    - docs.python.org/3/library/stdtypes.html#common-sequence-operations

EXAMPLE
(1)
res1 = range(1, 11, 2)[::-1]
res2 = reversed(range(1, 11, 2))
res3 = range(9, 0, -2)
print(list(res1))                               # [9, 7, 5, 3, 1]
print(list(res1) == list(res2) == list(res3))   # True

(2)
nums = [1, 1, 3]
res = 0
for i in range(len(nums)):
    res += nums[i]
print(res)          # 5

(3)
res = 0
for i in range(1, 4):
    res += i
print(res)          # 6
