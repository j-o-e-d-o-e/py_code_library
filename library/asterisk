asterisk

destructing operator

- operator for (un-)packing iterables
    - allows for multiple assignments
    - if num of vars and num of vals do not match, raises ValueError
- in conjunction with funcs
    (1) *args
        - pack multiple vals into a single tuple as an arg of a func (1.1)
        - unpack elems of an iterable/tuple into multiple args of a func (1.2)
    (2) **kwargs (for named keyword args)
        - pack multiple keyword-value-pairs into a single dict (2.1)
        - unpack vals of a dictionary into multiple args (2.2)
- in conjunction with iterables
    (3) *
        - pack multiple vals into a single list (3.1)
        - unpack elems of a list into multiple vars (3.2)
            - useful e.g. to extract 1st and last elem
    (4) **
        - pack multiple vals (keyword-args/dicts) into a single dict (4.1)
        - unpack vals of a dict into multiple vars (4.2)

- SEE ALSO
    - /bas.codes/posts/python-asterisks
    - /exercism/python/locomotive-engineer
    - /exercism/python/triangle

EXAMPLE
(1.1)
def add(*nums):
    sum = 0
    for num in nums:
        sum += num
    return sum

add(1, 2, 3, 4)  # 10
(1.2)
def add(num1, num2, num3):
    return num1 + num2 + num3

ls = [1, 2, 3]
add(*ls)  # 6

(2.1)
def to_dict(**kwargs):
    for keyword in kwargs:
        print(f"{kwargs[keyword]} is a {keyword}")

to_dict(cat="minka", clown="joe", veggie="tomato")
(2.2)
def to_dict(cat, clown, veggie):
    print(f"{cat} likes {clown}'s {veggie}")

dict = {'cat': 'minka', 'clown': 'joe', 'veggie': 'tomato'}
to_dict(**dict)  # minka likes joe's tomato

(3.1)
ls1 = [1, 2, 3]
ls2 = [10, 20, 30]
a = 42
merged = [*ls1, a, *ls2]  # [1, 2, 3, 42, 10, 20, 30]
(3.2)
ls = [1, 2, 3, 4, 5]
a, *b, c = ls  # 1 [2, 3, 4] 5

(4.1)
dict = {'cat': 'minka', 'clown': 'joe'}
merged = { **dict, 'veggie': 'tomato'}
# {'cat': 'minka', 'clown': 'joe', 'veggie': 'tomato'}
(4.2)
dict = {'cat': 'minka', 'clown': 'joe', 'veggie': 'tomato'}
a, *b = dict  # cat ['clown', 'veggie']
